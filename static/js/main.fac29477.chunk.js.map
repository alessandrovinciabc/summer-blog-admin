{"version":3,"sources":["components/Header.js","util/apiOperations.js","components/Loader.js","util/jwt.js","util/converter.js","util/sanitizer.js","pages/PostView.js","components/PostList.js","pages/HomeView.js","components/Editor/Editor.js","pages/CreateView.js","pages/EditView.js","components/LoginForm.js","pages/LoginView.js","App.js","index.js"],"names":["Header","props","auth","Navbar","className","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","apiBase","apiAuth","a","axios","get","postPost","title","json","jwt","post","headers","Authorization","postid","delete","putPost","updateObj","put","commentid","username","password","Loader","jwtModule","save","localStorage","setItem","getItem","remove","removeItem","validTypes","conversionHandlers","paragraph","block","data","text","header","level","list","tag","style","items","forEach","item","image","url","caption","embed","width","height","convertToHTML","blocks","final","result","includes","type","convertBlockToHTML","options","whiteList","xss","iframe","boundXSS","value","PostView","useParams","useState","comments","setComments","setPost","converted","setConverted","posts","loading","useEffect","length","matchingPost","find","_id","window","location","hash","parsedJSON","JSON","parse","sanitizer","getComments","then","newComments","catch","err","response","status","Container","fluid","Button","onClick","Date","createdAt","toLocaleDateString","dangerouslySetInnerHTML","__html","map","comment","Card","Body","Title","owner","deleteComment","reload","deletePostAndRefresh","deletePost","PostList","Subtitle","HomeView","Editor","React","forwardRef","ref","editor","useRef","editorContainer","editorjs","EditorJS","placeholder","holder","current","tools","class","config","levels","defaultLevel","SimpleImage","List","inlineToolbar","Embed","CreateView","titleInput","setTitleInput","isSaving","setIsSaving","editorRef","e","preventDefault","stringify","alert","Form","onSubmit","Control","name","required","maxLength","autoComplete","onChange","target","clear","EditView","LoginForm","failed","setFailed","setAuth","elements","login","Group","controlId","Label","Alert","LoginView","App","setPosts","setLoading","checkedAuth","setCheckedAuth","getPosts","newPosts","finally","jwtFromStorage","testAuth","res","path","exact","to","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fac29477.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction Header(props) {\r\n  let { auth } = props;\r\n  return (\r\n    <Navbar className={props.className + ''} variant=\"light\" expand=\"md\">\r\n      <Navbar.Brand href=\"#/home\">\r\n        <h1>☀⛱Admin</h1>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"header-navbar\" />\r\n      <Navbar.Collapse id=\"header-navbar\">\r\n        <Nav className=\"ml-auto main-navigation\">\r\n          <Nav.Link className=\"px-3\" href=\"#/home\">\r\n            Posts\r\n          </Nav.Link>\r\n          <Nav.Link className=\"px-3\" href=\"#/create\">\r\n            Create new post\r\n          </Nav.Link>\r\n          {auth ? (\r\n            <Nav.Link className=\"px-3 bg-danger rounded\" href=\"#/logout\">\r\n              <span className=\"text-white\">Logout</span>\r\n            </Nav.Link>\r\n          ) : (\r\n            <Nav.Link className=\"px-3\" href=\"#/login\">\r\n              Login\r\n            </Nav.Link>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nconst apiBase =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:3000/blog/post'\r\n    : 'https://summer-blog-api.herokuapp.com/blog/post';\r\n\r\nconst apiAuth =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:3000/auth'\r\n    : 'https://summer-blog-api.herokuapp.com/auth';\r\n\r\nasync function getPosts() {\r\n  return await axios.get(apiBase);\r\n}\r\n\r\nasync function postPost(title, json, jwt) {\r\n  return await axios.post(\r\n    apiBase,\r\n    { title, json },\r\n    { headers: { Authorization: `Bearer ${jwt}` } }\r\n  );\r\n}\r\n\r\nasync function deletePost(postid, jwt) {\r\n  return await axios.delete(`${apiBase}/${postid}`, {\r\n    headers: { Authorization: `Bearer ${jwt}` },\r\n  });\r\n}\r\n\r\nasync function putPost(postid, updateObj, jwt) {\r\n  return await axios.put(`${apiBase}/${postid}`, updateObj, {\r\n    headers: { Authorization: `Bearer ${jwt}` },\r\n  });\r\n}\r\n\r\nasync function getComments(postid) {\r\n  return await axios.get(`${apiBase}/${postid}/comment`);\r\n}\r\n\r\nasync function postComment(postid, data) {\r\n  return await axios.post(`${apiBase}/${postid}/comment`, data);\r\n}\r\n\r\nasync function deleteComment(postid, commentid, jwt) {\r\n  return await axios.delete(`${apiBase}/${postid}/comment/${commentid}`, {\r\n    headers: { Authorization: `Bearer ${jwt}` },\r\n  });\r\n}\r\n\r\n/******************** Auth *********************/\r\nasync function login(username, password) {\r\n  return await axios.post(`${apiAuth}/login`, { username, password });\r\n}\r\n\r\nasync function testAuth(jwt) {\r\n  return await axios.post(\r\n    `${apiAuth}/test`,\r\n    {},\r\n    { headers: { Authorization: `Bearer ${jwt}` } }\r\n  );\r\n}\r\nexport {\r\n  getPosts,\r\n  postPost,\r\n  deletePost,\r\n  putPost,\r\n  getComments,\r\n  postComment,\r\n  deleteComment,\r\n  login,\r\n  testAuth,\r\n};\r\n","import './Loader.css';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"lds-roller\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","function save(jwt) {\r\n  localStorage.setItem('jwt', jwt);\r\n}\r\n\r\nfunction get(jwt) {\r\n  return localStorage.getItem('jwt');\r\n}\r\n\r\nfunction remove() {\r\n  return localStorage.removeItem('jwt');\r\n}\r\n\r\nlet jwtModule = { save, get, remove };\r\n\r\nexport default jwtModule;\r\n","const validTypes = ['header', 'image', 'embed', 'list', 'paragraph'];\r\n\r\nfunction handleParagraph(block) {\r\n  let data = block.data;\r\n\r\n  return `<p>${data.text}<p>`;\r\n}\r\n\r\nfunction handleHeader(block) {\r\n  let data = block.data;\r\n\r\n  return `<h${data.level}>${data.text}</h${data.level}>`;\r\n}\r\n\r\nfunction handleList(block) {\r\n  let data = block.data;\r\n\r\n  let tag = data.style === 'ordered' ? 'ol' : 'ul';\r\n  let items = '';\r\n  data.items.forEach((item) => {\r\n    items += `<li>${item}</li>`;\r\n  });\r\n\r\n  return `<${tag}>${items}</${tag}>`;\r\n}\r\n\r\nfunction handleImage(block) {\r\n  let data = block.data;\r\n\r\n  return `<figure><img src=\"${data.url}\"/><figcaption>${data.caption}</figcaption></figure>`;\r\n}\r\n\r\nfunction handleEmbed(block) {\r\n  let data = block.data;\r\n\r\n  return `<iframe width=\"${data.width}\" height=\"${data.height}\" src=\"${data.embed}\" frameborder=\"0\" allowfullscreen></iframe>`;\r\n}\r\n\r\nconst conversionHandlers = {\r\n  paragraph: handleParagraph,\r\n  header: handleHeader,\r\n  list: handleList,\r\n  image: handleImage,\r\n  embed: handleEmbed,\r\n};\r\n\r\nfunction convertBlockToHTML(block) {\r\n  if (typeof block !== 'object') return;\r\n  if (!('id' in block && 'type' in block && 'data' in block)) return;\r\n\r\n  if (!validTypes.includes(block.type)) return;\r\n\r\n  let result = conversionHandlers[block.type](block);\r\n\r\n  return result;\r\n}\r\n\r\nfunction convertToHTML(blocks) {\r\n  let final = '';\r\n  blocks.forEach((block) => {\r\n    let result = convertBlockToHTML(block);\r\n    final += result;\r\n  });\r\n\r\n  return final;\r\n}\r\n\r\nexport default convertToHTML;\r\n","import xss from 'xss';\r\n\r\nlet options = {\r\n  whiteList: {\r\n    ...xss.whiteList,\r\n    iframe: ['width', 'height', 'src', 'frameborder', 'allowfullscreen'],\r\n  },\r\n};\r\n\r\nlet boundXSS = (value) => {\r\n  return xss(value, options);\r\n};\r\n\r\nexport default boundXSS;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { getComments, deleteComment } from '../util/apiOperations';\r\nimport jwt from '../util/jwt';\r\nimport convertToHTML from '../util/converter';\r\nimport sanitizer from '../util/sanitizer';\r\n\r\nfunction PostView(props) {\r\n  let { id } = useParams();\r\n  let [comments, setComments] = useState([]);\r\n  let [post, setPost] = useState(null);\r\n  let [converted, setConverted] = useState('');\r\n\r\n  let { posts, loading } = props;\r\n\r\n  useEffect(() => {\r\n    if (id == null) return;\r\n    if (posts.length === 0) return;\r\n\r\n    let matchingPost = posts.find((post) => post._id === id);\r\n    if (matchingPost == null) return (window.location.hash = '#/');\r\n    setPost(matchingPost);\r\n\r\n    let parsedJSON = JSON.parse(matchingPost.json);\r\n    setConverted(sanitizer(convertToHTML(parsedJSON.blocks)));\r\n\r\n    getComments(id)\r\n      .then((newComments) => {\r\n        setComments(newComments.data);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 404) return;\r\n      });\r\n  }, [id, posts]);\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center\" fluid>\r\n      {post ? (\r\n        <div className=\"post mt-4\">\r\n          <Button\r\n            onClick={() => {\r\n              window.location.hash = `#/post/${id}/edit`;\r\n            }}\r\n          >\r\n            Edit🖊\r\n          </Button>\r\n          <h1>{post.title}</h1>\r\n          <p className=\"text-muted\">\r\n            {new Date(post.createdAt).toLocaleDateString()}\r\n          </p>\r\n          <div\r\n            className=\"post-content\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: converted,\r\n            }}\r\n          ></div>\r\n          <section className=\"comments my-5 pt-3 border-top\">\r\n            <header>\r\n              <h2>Comments</h2>\r\n            </header>\r\n            <div>\r\n              {comments.length > 0\r\n                ? comments.map((comment) => {\r\n                    return (\r\n                      <Card\r\n                        key={comment._id}\r\n                        className=\"post-summary my-3 w-100 pr-5\"\r\n                      >\r\n                        <Card.Body className=\"pb-4 position-relative\">\r\n                          <Card.Title>{comment.owner}</Card.Title>\r\n                          {comment.text}\r\n                          <div className=\"text-muted position-absolute comment-time\">\r\n                            {new Date(comment.createdAt).toLocaleDateString()}\r\n                          </div>\r\n                        </Card.Body>\r\n                        <Button\r\n                          onClick={() => {\r\n                            deleteComment(id, comment._id, jwt.get())\r\n                              .then(() => {\r\n                                window.location.reload();\r\n                              })\r\n                              .catch(() => {});\r\n                          }}\r\n                          className=\"delete-btn rounded-right-only\"\r\n                          variant=\"danger\"\r\n                        >\r\n                          X\r\n                        </Button>\r\n                      </Card>\r\n                    );\r\n                  })\r\n                : 'Nothing here yet'}\r\n            </div>\r\n          </section>\r\n        </div>\r\n      ) : loading ? (\r\n        <div className=\"mt-4\">\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        <div className=\"mt-4\">Post was not found.</div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PostView;\r\n","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { deletePost } from '../util/apiOperations';\r\nimport jwt from '../util/jwt';\r\n\r\nfunction deletePostAndRefresh(postid) {\r\n  deletePost(postid, jwt.get())\r\n    .then(() => {\r\n      window.location.reload();\r\n    })\r\n    .catch((err) => {});\r\n}\r\n\r\nfunction PostList(props) {\r\n  let { posts } = props;\r\n  return (\r\n    <>\r\n      {posts &&\r\n        posts.length > 0 &&\r\n        posts.map((post) => {\r\n          return (\r\n            <div\r\n              key={post._id}\r\n              className=\"w-100 d-flex justify-content-center align-items-center\"\r\n            >\r\n              <Card className=\"post-summary my-3 mx-auto pr-5\">\r\n                <a className=\"text-reset post-link\" href={`#/post/${post._id}`}>\r\n                  <Card.Body>\r\n                    <Card.Title>{post.title}</Card.Title>\r\n                    <Card.Subtitle className=\"text-muted\">\r\n                      {new Date(post.createdAt).toLocaleDateString()}\r\n                    </Card.Subtitle>\r\n                  </Card.Body>\r\n                </a>\r\n\r\n                <Button\r\n                  onClick={() => {\r\n                    deletePostAndRefresh(post._id);\r\n                  }}\r\n                  className=\"delete-btn rounded-right-only\"\r\n                  variant=\"danger\"\r\n                >\r\n                  X\r\n                </Button>\r\n              </Card>\r\n            </div>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n","import React from 'react';\r\n\r\nimport PostList from '../components/PostList';\r\nimport Loader from '../components/Loader';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction HomeView(props) {\r\n  let { posts, loading } = props;\r\n  return (\r\n    <Container fluid>\r\n      <h1 className=\"text-center mt-3\">Posts</h1>\r\n      <div className=\"posts-container d-flex flex-column align-items-center\">\r\n        {loading && (\r\n          <>\r\n            <div className=\"mt-4\">\r\n              <Loader />\r\n            </div>\r\n            <br />\r\n          </>\r\n        )}\r\n        {posts.length > 0 ? (\r\n          <PostList posts={posts} />\r\n        ) : loading ? (\r\n          ''\r\n        ) : (\r\n          'Nothing here yet!'\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default HomeView;\r\n","import EditorJS from '@editorjs/editorjs';\r\n\r\n/* Tools */\r\nimport Header from '@editorjs/header';\r\nimport SimpleImage from '@editorjs/simple-image';\r\nimport List from '@editorjs/list';\r\nimport Embed from '@editorjs/embed';\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nconst Editor = React.forwardRef((props, ref) => {\r\n  let editor = useRef();\r\n  let editorContainer = useRef();\r\n\r\n  useEffect(() => {\r\n    const editorjs = new EditorJS({\r\n      placeholder: 'Type something...',\r\n      data: props.data ?? {},\r\n      holder: editorContainer.current,\r\n      tools: {\r\n        header: {\r\n          class: Header,\r\n          config: {\r\n            placeholder: 'Enter a header',\r\n            levels: [1, 2, 3, 4, 5, 6],\r\n            defaultLevel: 2,\r\n          },\r\n        },\r\n        image: SimpleImage,\r\n        list: {\r\n          class: List,\r\n          inlineToolbar: true,\r\n        },\r\n        embed: {\r\n          class: Embed,\r\n          inlineToolbar: true,\r\n        },\r\n      },\r\n    });\r\n\r\n    editor.current = editorjs;\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    ref.current = editor.current;\r\n  }, [ref]);\r\n\r\n  return <div ref={editorContainer}></div>;\r\n});\r\n\r\nexport default Editor;\r\n","import React, { useRef, useState } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport Loader from '../components/Loader';\r\nimport Editor from '../components/Editor/Editor';\r\n\r\nimport { postPost } from '../util/apiOperations';\r\nimport jwt from '../util/jwt';\r\n\r\nfunction CreateView(props) {\r\n  let [titleInput, setTitleInput] = useState('');\r\n\r\n  let [isSaving, setIsSaving] = useState(false);\r\n  let editorRef = useRef();\r\n\r\n  async function handleSave(e) {\r\n    e.preventDefault();\r\n    setIsSaving(true);\r\n\r\n    let data;\r\n    try {\r\n      data = await editorRef.current.save();\r\n      await postPost(titleInput, JSON.stringify(data), jwt.get());\r\n\r\n      window.location.hash = '#/';\r\n      window.location.reload();\r\n    } catch (err) {\r\n      alert('An error occurred');\r\n    }\r\n\r\n    setIsSaving(false);\r\n  }\r\n\r\n  function resetEditor() {\r\n    setTitleInput('');\r\n    editorRef.current.blocks.clear();\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1 className=\"text-center mt-3\">Create</h1>\r\n      <div className=\"d-flex flex-column align-items-center\">\r\n        {isSaving && (\r\n          <div className=\"my-4\">\r\n            <Loader />\r\n          </div>\r\n        )}\r\n        <br />\r\n        <Form\r\n          onSubmit={handleSave}\r\n          className=\"w-100 d-flex flex-column align-items-center\"\r\n        >\r\n          <Form.Control\r\n            name=\"title\"\r\n            type=\"text\"\r\n            required\r\n            maxLength=\"60\"\r\n            autoComplete=\"off\"\r\n            className=\"title-input\"\r\n            value={titleInput}\r\n            onChange={(e) => {\r\n              setTitleInput(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <div className=\"mt-4\">\r\n            <Button type=\"submit\" className=\"mr-3\" variant=\"warning\">\r\n              Add Post to Blog\r\n            </Button>\r\n            <Button onClick={resetEditor} variant=\"danger\">\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <Container fluid className=\"mt-4\">\r\n        <Editor ref={editorRef} />\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CreateView;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Editor from '../components/Editor/Editor';\r\n\r\nimport { putPost } from '../util/apiOperations';\r\nimport jwt from '../util/jwt';\r\n\r\nfunction EditView(props) {\r\n  let { id } = useParams();\r\n  let [post, setPost] = useState(null);\r\n  let [titleInput, setTitleInput] = useState(null);\r\n\r\n  let [isSaving, setIsSaving] = useState(false);\r\n  let editorRef = useRef();\r\n\r\n  let { posts, loading } = props;\r\n\r\n  useEffect(() => {\r\n    if (id == null) return;\r\n    if (posts.length === 0) return;\r\n\r\n    let matchingPost = posts.find((post) => post._id === id);\r\n    setPost(matchingPost);\r\n    setTitleInput(matchingPost.title);\r\n  }, [id, posts]);\r\n\r\n  async function handleSave(e) {\r\n    e.preventDefault();\r\n\r\n    setIsSaving(true);\r\n\r\n    let data;\r\n    try {\r\n      data = await editorRef.current.save();\r\n      await putPost(\r\n        id,\r\n        { title: titleInput, json: JSON.stringify(data) },\r\n        jwt.get()\r\n      );\r\n\r\n      window.location.hash = `#/post/${id}`;\r\n      window.location.reload();\r\n    } catch (err) {\r\n      alert('An error occurred');\r\n    }\r\n\r\n    setIsSaving(false);\r\n  }\r\n\r\n  function handleCancel() {\r\n    window.location.hash = `#/post/${id}`;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center\" fluid>\r\n      {post ? (\r\n        <div className=\"post mt-4\">\r\n          <Form onSubmit={handleSave}>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Button type=\"submit\" variant=\"danger\" className=\"w-25 mr-3\">\r\n                Save\r\n              </Button>\r\n              <Button onClick={handleCancel} variant=\"primary\" className=\"w-25\">\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"d-flex flex-column align-items-center\">\r\n              {isSaving && (\r\n                <div className=\"my-4\">\r\n                  <Loader />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <Form.Control\r\n              type=\"text\"\r\n              required\r\n              maxLength=\"60\"\r\n              autoComplete=\"off\"\r\n              className=\"title-input my-3 edit-title-input\"\r\n              value={titleInput}\r\n              onChange={(e) => {\r\n                setTitleInput(e.target.value);\r\n              }}\r\n            />\r\n          </Form>\r\n\r\n          <p className=\"text-muted\">\r\n            {new Date(post.createdAt).toLocaleDateString()}\r\n          </p>\r\n\r\n          <Container fluid className=\"mt-4\">\r\n            <Editor ref={editorRef} data={JSON.parse(post.json)} />\r\n          </Container>\r\n        </div>\r\n      ) : loading ? (\r\n        <div className=\"mt-4\">\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        <div className=\"mt-4\">Post was not found.</div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default EditView;\r\n","import React, { useState } from 'react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { login } from '../util/apiOperations';\r\nimport jwt from '../util/jwt';\r\n\r\nfunction LoginForm(props) {\r\n  let [failed, setFailed] = useState(false);\r\n\r\n  let { setAuth } = props;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    let { username, password } = e.target.elements;\r\n    username = username.value;\r\n    password = password.value;\r\n\r\n    login(username, password)\r\n      .then((result) => {\r\n        jwt.save(result.data.jwt);\r\n        setAuth(result);\r\n        window.location.hash = '#/';\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 401) return setFailed(true);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formName\">\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control\r\n          name=\"username\"\r\n          type=\"text\"\r\n          required\r\n          maxLength=\"20\"\r\n          autoComplete=\"off\"\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          name=\"password\"\r\n          type=\"password\"\r\n          required\r\n          maxLength=\"100\"\r\n          autoComplete=\"off\"\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"d-block mx-auto\" variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n      {failed && (\r\n        <Alert className=\"mt-3\" variant=\"danger\">\r\n          Invalid username or password\r\n        </Alert>\r\n      )}\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import Loader from '../components/Loader';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nfunction LoginView(props) {\r\n  let { loading, setAuth } = props;\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center\" fluid>\r\n      <div className=\"mt-4\">\r\n        <h1>Login</h1>\r\n        {loading ? (\r\n          <div className=\"mt-4\">\r\n            <Loader />\r\n          </div>\r\n        ) : (\r\n          <LoginForm setAuth={setAuth} />\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginView;\r\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport { getPosts } from './util/apiOperations';\n\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\n\n//Pages\nimport PostView from './pages/PostView';\nimport HomeView from './pages/HomeView';\nimport CreateView from './pages/CreateView';\nimport EditView from './pages/EditView';\n\nimport LoginView from './pages/LoginView';\n\nimport jwt from './util/jwt';\nimport { testAuth } from './util/apiOperations';\n\nfunction App() {\n  let [posts, setPosts] = useState([]);\n  let [loading, setLoading] = useState(true);\n\n  let [checkedAuth, setCheckedAuth] = useState(false);\n  let [auth, setAuth] = useState(null);\n\n  useEffect(() => {\n    getPosts()\n      .then((newPosts) => {\n        setPosts(newPosts.data);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n\n    let jwtFromStorage = jwt.get();\n\n    if (jwtFromStorage == null) return setCheckedAuth(true);\n\n    testAuth(jwtFromStorage)\n      .then((res) => {\n        setAuth(jwtFromStorage);\n      })\n      .catch((err) => {\n        jwt.remove();\n      })\n      .finally(() => {\n        setCheckedAuth(true);\n      });\n  }, []);\n\n  return (\n    <>\n      {checkedAuth && (\n        <HashRouter>\n          <Header className=\"bg-header\" auth={auth} />\n          <Switch>\n            <Route path=\"/login\" exact>\n              {auth && <Redirect to=\"/\" />}\n              <LoginView setAuth={setAuth} loading={loading} />\n            </Route>\n            <Route\n              path=\"/logout\"\n              exact\n              render={() => {\n                jwt.remove();\n                setAuth(null);\n\n                return <Redirect to=\"/\" />;\n              }}\n            />\n            {auth == null && <Redirect to=\"/login\" />}\n\n            <Route path=\"/\" exact>\n              <Redirect to=\"/home\" />\n            </Route>\n            <Route path=\"/home\" exact>\n              <HomeView posts={posts} loading={loading} />\n            </Route>\n            <Route path=\"/post/:id\" exact>\n              <PostView posts={posts} loading={loading} />\n            </Route>\n            <Route path=\"/post/:id/edit\" exact>\n              <EditView posts={posts} loading={loading} />\n            </Route>\n            <Route path=\"/create\" exact>\n              <CreateView loading={loading} />\n            </Route>\n          </Switch>\n        </HashRouter>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './main.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}